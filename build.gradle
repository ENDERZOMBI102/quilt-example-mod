plugins {
	id 'org.quiltmc.loom' version '0.12.23'
	id 'maven-publish'
}

group = maven_group
version = rootProject.version
archivesBaseName = archives_base_name

repositories {
	maven { url 'https://maven.quiltmc.org/repository/release' }
	maven {
		url 'https://maven.quiltmc.org/repository/snapshot'
		content {
			includeGroup 'org.quiltmc.fabric_api_qsl'
			includeGroupByRegex 'org\\.quiltmc\\.qsl(?:\\.[a-z_]+)?'
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:$minecraft_version"
	mappings( loom.layered {
		addLayer quiltMappings.mappings( "org.quiltmc:quilt-mappings:$minecraft_version+build.$quilt_mappings:v2" )
//		addLayer loom.officialMojangMappings() // uncomment if you want mojmap too
	})
	modImplementation "org.quiltmc:quilt-loader:$loader_version"

	// quilted fabric api is required by fabric mods, like modmenu, and it provides QSL too
	modImplementation( "org.quiltmc.quilted-fabric-api:quilted-fabric-api:$quilted_fapi_version-$minecraft_version-SNAPSHOT" ) {
		exclude group: 'net.fabricmc'
	}

	modImplementation("com.terraformersmc:modmenu:$modmenu_version") {
		transitive false
	}
}

processResources {
	inputs.property 'version', version
	inputs.property 'maven_group', maven_group
	inputs.property 'loader_version', loader_version
	inputs.property 'minecraft_version', minecraft_version

	filesMatching('quilt.mod.json') {
		expand([
			'version': version,
			'maven_group': maven_group,
			'loader_version': loader_version,
			'minecraft_version': minecraft_version,
		])
	}
}

tasks.withType(JavaCompile).configureEach {
	it.sourceCompatibility = 17 // for the IDE support
	it.options.encoding = 'UTF-8'
	it.options.release.set(17)
}

java {
	// if this mod is gonna be a library, its better to generate javadocs too, uncomment this line to generate them
	//withJavadocJar()
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from('LICENSE') {
		rename { "$it_$archivesBaseName"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			group 'com.examplemod'
			from components.java
		}
	}

	repositories {
		 mavenLocal()
	}
}
